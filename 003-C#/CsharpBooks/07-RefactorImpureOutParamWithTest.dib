#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!markdown

Refactor Impure Out Param With Test
-----------------------------------

```csharp

using System;
using static System.Console;

// Pure Function (Math), without side effects
public record CalcData(Sum Sum, 
  Dif Dif, 
  Pro Pro, 
  Quo Quo);

public static CalcData Math(int a, int b) =>  
  new CalcData(Sum.Calc(a, b), 
    Dif.Calc(a, b), 
    Pro.Calc(a, b), 
    Quo.Calc(a, b));

public record Sum(int Value) {
  public static Sum Calc(int a, int b) => new(a + b);
}
public record Dif(int Value) {
  public static Dif Calc(int a, int b) => new(a - b);
}
public record Pro(decimal Value) { 
  public static Pro Calc(decimal a, decimal b) => 
    new((decimal)a * b);
}
public record Quo(decimal Value) { 
  public static Quo Calc(decimal a, decimal b) => 
    new((decimal)a / b);
}

WriteLine("--------------------------------------------------");

/*------------------------------------------*
  tests to run
\*------------------------------------------*/

// Test# 1
WriteLine(
  "'When a=5 and b=10" +
  ",then Sum=15, Dif=-5, Pro=50, Quo=0.5'");

CalcData sut = Math(5, 10);

var assertPass = (sut.Sum.Value == 15 &&
  sut.Dif.Value == -5 &&
  sut.Pro.Value == 50 &&
  sut.Quo.Value == (decimal)0.5);

WriteLine("Test #1: {0}", assertPass 
  ? "Passed" : "Failed");

if (!assertPass) {
  WriteLine("'Actual: Sum={0}, Dif={1}, Pro={2}, Quo={3}'", 
    sut.Sum.Value, 
    sut.Dif.Value, 
    sut.Pro.Value, 
    sut.Quo.Value);
}

WriteLine("--------------------------------------------------");

```
